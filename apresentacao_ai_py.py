import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import numpy as np
import json
import os
import io
import re
import unicodedata
from datetime import datetime
import warnings
import logging
import sys
import contextlib
import openpyxl
from openpyxl.styles import Font, PatternFill
from openpyxl.utils import get_column_letter
import requests
import pymupdf as fitz
import pikepdf

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="IA para Otimiza√ß√£o de Processos - CSN Energia",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# CSS customizado com paleta azul escuro e branco
st.markdown("""
<style>
    .main {
        background-color: #ffffff;
    }
    
    .slide-header {
        background: linear-gradient(90deg, #1e3a8a 0%, #3b82f6 100%);
        color: white;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .slide-title {
        font-size: 3rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }
    
    .slide-subtitle {
        font-size: 1.5rem;
        opacity: 0.9;
    }
    
    .content-card {
        background: white;
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(30, 58, 138, 0.1);
        border-left: 5px solid #1e3a8a;
        margin-bottom: 2rem;
    }
    
    .metric-card {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 1.5rem;
        border-radius: 10px;
        text-align: center;
        border: 2px solid #1e3a8a;
        margin: 1rem 0;
    }
    
    .metric-value {
        font-size: 2.5rem;
        font-weight: bold;
        color: #1e3a8a;
        margin-bottom: 0.5rem;
    }
    
    .metric-label {
        font-size: 1rem;
        color: #64748b;
        font-weight: 500;
    }
    
    .highlight-box {
        background: linear-gradient(90deg, #1e3a8a 0%, #3b82f6 100%);
        color: white;
        padding: 1.5rem;
        border-radius: 10px;
        margin: 1rem 0;
    }
    
    .navigation-buttons {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 999;
    }
    
    .nav-button {
        background: #1e3a8a;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 25px;
        margin: 0 5px;
        cursor: pointer;
        font-weight: bold;
        box-shadow: 0 2px 10px rgba(30, 58, 138, 0.3);
    }
    
    .nav-button:hover {
        background: #3b82f6;
        transform: translateY(-2px);
    }
    
    .bullet-point {
        color: #1e3a8a;
        font-size: 1.2rem;
        margin: 0.5rem 0;
        padding-left: 1rem;
    }
    
    .roi-calculator {
        background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
        padding: 2rem;
        border-radius: 15px;
        border: 2px solid #1e3a8a;
        margin: 2rem 0;
    }
</style>
""", unsafe_allow_html=True)

# Inicializar estado da sess√£o
if 'current_slide' not in st.session_state:
    st.session_state.current_slide = 0

# Definir slides
slides = [
    "Capa",
    "Vis√£o Estrat√©gica",
    "Matriz Esfor√ßo x Impacto", 
    "Solu√ß√£o PDFator",
    "Demonstra√ß√£o PDFator",
    "Calculadora ROI",
    "Resultados e Benef√≠cios",
    "Conclus√µes"
]

# Sidebar para navega√ß√£o
with st.sidebar:
    st.markdown("### üìã Navega√ß√£o")
    for i, slide in enumerate(slides):
        if st.button(f"{i+1}. {slide}", key=f"nav_{i}"):
            st.session_state.current_slide = i

# Fun√ß√µes auxiliares para PDFator
def normalizar_texto(texto):
    if not isinstance(texto, str):
        return ""
    texto = texto.lower().strip()
    texto = unicodedata.normalize('NFKD', texto).encode('ASCII', 'ignore').decode('ASCII')
    texto = re.sub(r'[^a-zA-Z0-9]', '', texto)
    return texto

def calcular_custo_api(response):
    try:
        usage = response.usage
        input_tokens = usage.prompt_tokens
        output_tokens = usage.completion_tokens
        preco_input = 0.0005
        preco_output = 0.0015
        custo = (input_tokens * preco_input + output_tokens * preco_output) / 1000
        return custo
    except:
        return 0

# Mapeamento de cobran√ßa (vers√£o resumida para o exemplo)
mapeamento_tipo_cobranca = {
    "Energia elet. adquirida 3": "Encargo",
    "energia elet adquirida 3": "Encargo",
    "DEDUCAO ENERGIA ACL": "Desc. Encargo",
    "DEDUC√ÉO ENERGIA ACL": "Desc. Encargo",
    "demanda ponta c/desconto": "Demanda",
    "DEMANDA FORA PONTA C/DESC": "Demanda",
    "Contrib llum Publica Municipal": "Contb. Publica",
    "CIP-ILUM PUB PREF MUNICIPAL": "Contb. Publica",
    "UFER PONTA TE": "Reativa",
    "Energia Reativa kWh HFP": "Reativa"
}

# Slides
current_slide = st.session_state.current_slide

if current_slide == 0:  # CAPA
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">ü§ñ Intelig√™ncia Artificial</div>
        <div class="slide-title">para Otimiza√ß√£o de Processos</div>
        <div class="slide-subtitle">Caso de Estudo: CSN Energia - PDFator</div>
        <br>
        <div style="font-size: 1.2rem;">
            Automatiza√ß√£o Inteligente de Faturas de Energia<br>
            <em>Transformando dados n√£o estruturados em insights estrat√©gicos</em>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a; text-align: center;">üéØ Objetivo da Apresenta√ß√£o</h3>
            <div class="bullet-point">‚Ä¢ Demonstrar aplica√ß√£o pr√°tica de IA em processos industriais</div>
            <div class="bullet-point">‚Ä¢ Apresentar o PDFator: solu√ß√£o de automa√ß√£o com IA generativa</div>
            <div class="bullet-point">‚Ä¢ Mostrar ROI real e mensur√°vel em opera√ß√µes da CSN Energia</div>
            <div class="bullet-point">‚Ä¢ Explorar estrat√©gias de implementa√ß√£o escal√°vel</div>
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 1:  # VIS√ÉO ESTRAT√âGICA
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üéØ Vis√£o Estrat√©gica</div>
        <div class="slide-subtitle">IA como Catalisador de Efici√™ncia Operacional</div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üè≠ Sobre a CSN Energia</h3>
            <div class="bullet-point">‚Ä¢ Maior consumidora industrial de energia do Brasil</div>
            <div class="bullet-point">‚Ä¢ Opera√ß√µes integradas: siderurgia, minera√ß√£o, energia</div>
            <div class="bullet-point">‚Ä¢ M√∫ltiplas unidades com distribuidoras diferentes</div>
            <div class="bullet-point">‚Ä¢ Complexidade na gest√£o de dados energ√©ticos</div>
        </div>
        
        <div class="highlight-box">
            <h4>üéØ Drivers Estrat√©gicos</h4>
            <div style="margin: 1rem 0;">‚úì Aumentar receita</div>
            <div style="margin: 1rem 0;">‚úì Otimizar custos operacionais</div>
            <div style="margin: 1rem 0;">‚úì Maior controle da opera√ß√£o</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">‚ö° Desafios Identificados</h3>
            <div class="bullet-point">‚Ä¢ Faturas em formatos heterog√™neos</div>
            <div class="bullet-point">‚Ä¢ Processo manual de 30min/fatura</div>
            <div class="bullet-point">‚Ä¢ Taxa de erro humano de ~15%</div>
            <div class="bullet-point">‚Ä¢ Dificuldade na consolida√ß√£o de KPIs</div>
        </div>
        
        <div class="content-card">
            <h3 style="color: #1e3a8a;">ü§ñ Oportunidades com IA</h3>
            <div class="bullet-point">‚Ä¢ OCR + IA Generativa para extra√ß√£o</div>
            <div class="bullet-point">‚Ä¢ Padroniza√ß√£o autom√°tica de dados</div>
            <div class="bullet-point">‚Ä¢ Redu√ß√£o de 95% no tempo de processo</div>
            <div class="bullet-point">‚Ä¢ Precis√£o superior a 95%</div>
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 2:  # MATRIZ ESFOR√áO X IMPACTO
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üìä Matriz Esfor√ßo x Impacto</div>
        <div class="slide-subtitle">Prioriza√ß√£o Estrat√©gica de Projetos de IA</div>
    </div>
    """, unsafe_allow_html=True)
    
    # Dados da matriz
    projetos = {
        'Projeto': ['An√°lise de Dados de Energia', 'Manuten√ß√£o Preventiva', 'Previs√£o de Demanda', 'Monitoramento ESG'],
        'Esfor√ßo': [2.0, 2.0, 4.5, 4.0],
        'Impacto': [4.8, 2.0, 4.8, 2.0],
        'Descri√ß√£o': [
            'PDFator - Automa√ß√£o de faturas', 
            'IA para equipamentos',
            'Previs√£o com ML',
            'Monitoramento ambiental'
        ]
    }
    
    df_matriz = pd.DataFrame(projetos)
    
    # Criar gr√°fico da matriz
    fig = px.scatter(df_matriz, 
                     x='Esfor√ßo', y='Impacto', 
                     text='Projeto',
                     color='Impacto',
                     size='Impacto',
                     color_continuous_scale=[[0, '#e2e8f0'], [1, '#1e3a8a']])
    
    fig.update_traces(textposition="top center", textfont_size=12, textfont_color="#1e3a8a")
    fig.update_layout(
        title="Matriz de Prioriza√ß√£o - Projetos de IA na CSN",
        xaxis_title="Esfor√ßo de Implementa√ß√£o",
        yaxis_title="Impacto no Neg√≥cio",
        showlegend=False,
        plot_bgcolor='white',
        paper_bgcolor='white',
        font=dict(color='#1e3a8a'),
        title_font_size=20,
        height=500
    )
    
    # Adicionar linhas de grade
    fig.add_hline(y=3.5, line_dash="dash", line_color="#64748b", opacity=0.5)
    fig.add_vline(x=3.0, line_dash="dash", line_color="#64748b", opacity=0.5)
    
    # Adicionar anota√ß√µes dos quadrantes
    fig.add_annotation(x=1.5, y=4.5, text="Alto Impacto<br>Baixo Esfor√ßo", 
                      showarrow=False, font_color="#1e3a8a", bgcolor="#f0f9ff")
    fig.add_annotation(x=4.2, y=4.5, text="Alto Impacto<br>Alto Esfor√ßo", 
                      showarrow=False, font_color="#1e3a8a", bgcolor="#f0f9ff")
    
    st.plotly_chart(fig, use_container_width=True)
    
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        <div class="highlight-box">
            <h4>ü•á Projeto Piloto Selecionado</h4>
            <strong>An√°lise de Dados de Energia (PDFator)</strong><br>
            ‚úì Alto impacto no neg√≥cio<br>
            ‚úì Baixo esfor√ßo de implementa√ß√£o<br>
            ‚úì ROI mensur√°vel e imediato
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="content-card">
            <h4 style="color: #1e3a8a;">üìà Crit√©rios de Avalia√ß√£o</h4>
            <div class="bullet-point">‚Ä¢ Viabilidade t√©cnica</div>
            <div class="bullet-point">‚Ä¢ Disponibilidade de dados</div>
            <div class="bullet-point">‚Ä¢ Impacto financeiro</div>
            <div class="bullet-point">‚Ä¢ Risco de implementa√ß√£o</div>
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 3:  # SOLU√á√ÉO PDFATOR
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üîß Solu√ß√£o PDFator</div>
        <div class="slide-subtitle">Arquitetura de IA para Processamento Inteligente</div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üèóÔ∏è Arquitetura T√©cnica</h3>
            <div class="bullet-point">‚Ä¢ <strong>OCR:</strong> PaddleOCR + OpenCV</div>
            <div class="bullet-point">‚Ä¢ <strong>IA Generativa:</strong> GPT-3.5-turbo</div>
            <div class="bullet-point">‚Ä¢ <strong>Processamento:</strong> Python + Pandas</div>
            <div class="bullet-point">‚Ä¢ <strong>Interface:</strong> Streamlit</div>
            <div class="bullet-point">‚Ä¢ <strong>Output:</strong> Excel estruturado</div>
        </div>
        
        <div class="content-card">
            <h3 style="color: #1e3a8a;">‚öôÔ∏è Funcionalidades</h3>
            <div class="bullet-point">‚Ä¢ Upload m√∫ltiplo (at√© 80 PDFs)</div>
            <div class="bullet-point">‚Ä¢ Tratamento de PDFs protegidos</div>
            <div class="bullet-point">‚Ä¢ Categoriza√ß√£o autom√°tica</div>
            <div class="bullet-point">‚Ä¢ Extra√ß√£o de metadados</div>
            <div class="bullet-point">‚Ä¢ Relat√≥rios consolidados</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        # Fluxo do processo
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üîÑ Fluxo de Processamento</h3>
        </div>
        """, unsafe_allow_html=True)
        
        # Criar fluxograma simples
        processo_steps = pd.DataFrame({
            'Etapa': range(1, 9),
            'Processo': [
                'Upload PDFs',
                'Extra√ß√£o OCR', 
                'IA Generativa',
                'Normaliza√ß√£o',
                'Categoriza√ß√£o',
                'Valida√ß√£o',
                'Consolida√ß√£o',
                'Export Excel'
            ],
            'Tempo': ['0s', '10s', '15s', '2s', '3s', '1s', '2s', '1s']
        })
        
        for idx, row in processo_steps.iterrows():
            st.markdown(f"""
            <div style="background: linear-gradient(90deg, #1e3a8a 0%, #3b82f6 100%); 
                        color: white; padding: 0.8rem; margin: 0.3rem 0; 
                        border-radius: 8px; text-align: center;">
                <strong>{row['Etapa']}. {row['Processo']}</strong> 
                <span style="float: right;">~{row['Tempo']}</span>
            </div>
            """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="highlight-box">
            <h4>‚ö° Performance</h4>
            <strong>Tempo total: ~34 segundos/fatura</strong><br>
            vs. 30 minutos manual (98.1% redu√ß√£o)
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 4:  # DEMONSTRA√á√ÉO PDFATOR
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üé¨ Demonstra√ß√£o PDFator</div>
        <div class="slide-subtitle">Sistema em Funcionamento - Tempo Real</div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">‚ö° PDFator - Extrator de Faturas de Energia</h3>
            <p>Sistema de automa√ß√£o com IA para processamento de faturas de energia el√©trica da CSN.</p>
            <br>
            <div class="bullet-point">‚Ä¢ Interface web intuitiva e responsiva</div>
            <div class="bullet-point">‚Ä¢ Processamento em lote at√© 80 PDFs</div>
            <div class="bullet-point">‚Ä¢ Extra√ß√£o autom√°tica com IA generativa</div>
            <div class="bullet-point">‚Ä¢ Categoriza√ß√£o inteligente de cobran√ßas</div>
            <div class="bullet-point">‚Ä¢ Relat√≥rios Excel estruturados</div>
            <div class="bullet-point">‚Ä¢ Tratamento de PDFs protegidos</div>
        </div>
        
        <div style="text-align: center; margin: 2rem 0;">
            <a href="https://leitorfaturasv7.streamlit.app/" target="_blank">
                <div style="background: linear-gradient(90deg, #1e3a8a 0%, #3b82f6 100%); 
                           color: white; padding: 1.5rem 3rem; border-radius: 15px; 
                           text-decoration: none; display: inline-block; font-size: 1.3rem; 
                           font-weight: bold; box-shadow: 0 4px 15px rgba(30, 58, 138, 0.3);
                           transition: transform 0.3s ease;">
                    üöÄ ACESSAR PDFATOR EM TEMPO REAL üöÄ
                </div>
            </a>
            <p style="margin-top: 1rem; color: #64748b; font-style: italic;">
                Clique para abrir o sistema funcional em nova aba
            </p>
        </div>
        
        <div class="highlight-box">
            <h4>üí° Como testar o sistema:</h4>
            1. Abra o link do PDFator<br>
            2. Insira sua chave da API OpenAI<br>
            3. Fa√ßa upload de PDFs de faturas<br>
            4. Veja a magia da IA acontecer!<br>
            5. Baixe o relat√≥rio Excel estruturado
        </div>
    </div>
    
    with col2:
        # M√©tricas em tempo real
        st.markdown("### üìä Performance do Sistema")
        
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">98.1%</div>
            <div class="metric-label">Redu√ß√£o de Tempo</div>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">95%</div>
            <div class="metric-label">Precis√£o</div>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">80</div>
            <div class="metric-label">PDFs/Lote</div>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">6</div>
            <div class="metric-label">Categorias</div>
        </div>
        """, unsafe_allow_html=True)
        
        # Preview da interface
        st.markdown("### üñ•Ô∏è Preview da Interface")
        
        # Exemplo visual da categoriza√ß√£o
        exemplo_resultado = pd.DataFrame({
            'Categoria': ['Encargo', 'Desc. Encargo', 'Demanda', 'Reativa', 'Contb. Publica'],
            'Valor (R$)': [15420.30, -2340.50, 8750.20, 450.10, 125.30]
        })
        
        fig = px.bar(exemplo_resultado, x='Categoria', y='Valor (R$)', 
                    color='Valor (R$)', 
                    color_continuous_scale=['#ef4444', '#1e3a8a'])
        fig.update_layout(
            title="Exemplo: Categoriza√ß√£o Autom√°tica",
            plot_bgcolor='white', 
            paper_bgcolor='white',
            height=300,
            font=dict(size=10)
        )
        st.plotly_chart(fig, use_container_width=True)
        
        st.markdown("""
        <div style="background: #f0f9ff; padding: 1rem; border-radius: 8px; 
                    border-left: 4px solid #1e3a8a; margin-top: 1rem;">
            <strong>üíº Para a demonstra√ß√£o:</strong><br>
            Use qualquer PDF de fatura de energia el√©trica brasileira. 
            O sistema reconhece formatos de todas as principais distribuidoras.
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 5:  # CALCULADORA ROI
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üí∞ Calculadora de ROI</div>
        <div class="slide-subtitle">Simula√ß√£o de Economia em Tempo Real</div>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("""
    <div class="roi-calculator">
        <h3 style="color: #1e3a8a; text-align: center;">üßÆ Simulador de Retorno sobre Investimento</h3>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns([1, 1])
    
    with col1:
        st.markdown("### ‚öôÔ∏è Par√¢metros de Entrada")
        
        # Inputs para c√°lculo
        num_faturas = st.slider("N√∫mero de faturas processadas/m√™s", 50, 1000, 500, 50)
        custo_hora_analista = st.slider("Custo/hora do analista (R$)", 60, 120, 80, 10)
        tempo_manual_min = st.slider("Tempo manual por fatura (min)", 20, 45, 30, 5)
        precisao_manual = st.slider("Precis√£o manual (%)", 80, 95, 85, 5)
        
        # Par√¢metros fixos do sistema
        tempo_pdfator_min = 1.5
        precisao_pdfator = 95
        custo_sistema_mensal = 450
        
    with col2:
        st.markdown("### üìä Resultados Calculados")
        
        # C√°lculos
        tempo_manual_total_horas = (num_faturas * tempo_manual_min) / 60
        tempo_pdfator_total_horas = (num_faturas * tempo_pdfator_min) / 60
        
        economia_tempo_horas = tempo_manual_total_horas - tempo_pdfator_total_horas
        economia_monetaria = economia_tempo_horas * custo_hora_analista
        economia_liquida = economia_monetaria - custo_sistema_mensal
        
        roi_percentual = ((economia_liquida / custo_sistema_mensal) * 100) if custo_sistema_mensal > 0 else 0
        payback_dias = (custo_sistema_mensal / (economia_monetaria / 30)) if economia_monetaria > 0 else 0
        
        # Exibir m√©tricas
        col2_1, col2_2 = st.columns(2)
        
        with col2_1:
            st.markdown(f"""
            <div class="metric-card">
                <div class="metric-value">R$ {economia_liquida:,.0f}</div>
                <div class="metric-label">Economia L√≠quida/M√™s</div>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown(f"""
            <div class="metric-card">
                <div class="metric-value">{roi_percentual:.0f}%</div>
                <div class="metric-label">ROI Mensal</div>
            </div>
            """, unsafe_allow_html=True)
        
        with col2_2:
            st.markdown(f"""
            <div class="metric-card">
                <div class="metric-value">{economia_tempo_horas:.0f}h</div>
                <div class="metric-label">Economia de Tempo/M√™s</div>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown(f"""
            <div class="metric-card">
                <div class="metric-value">{payback_dias:.0f}</div>
                <div class="metric-label">Payback (dias)</div>
            </div>
            """, unsafe_allow_html=True)
    
    # Gr√°fico de compara√ß√£o
    st.markdown("### üìà An√°lise Comparativa Anual")
    
    meses = list(range(1, 13))
    economia_acumulada = [economia_liquida * m for m in meses]
    investimento_acumulado = [custo_sistema_mensal * m for m in meses]
    
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=meses, y=economia_acumulada, 
                           mode='lines+markers', name='Economia Acumulada',
                           line=dict(color='#1e3a8a', width=3)))
    fig.add_trace(go.Scatter(x=meses, y=investimento_acumulado,
                           mode='lines+markers', name='Investimento Acumulado',
                           line=dict(color='#ef4444', width=3)))
    
    fig.update_layout(
        title=f"Proje√ß√£o Anual - {num_faturas} faturas/m√™s",
        xaxis_title="M√™s",
        yaxis_title="Valor (R$)",
        plot_bgcolor='white',
        paper_bgcolor='white',
        height=400
    )
    
    st.plotly_chart(fig, use_container_width=True)
    
    # Resumo executivo
    st.markdown(f"""
    <div class="highlight-box">
        <h4>üìã Resumo Executivo</h4>
        <strong>Cen√°rio: {num_faturas} faturas/m√™s</strong><br><br>
        ‚úì Economia anual: <strong>R$ {economia_liquida * 12:,.0f}</strong><br>
        ‚úì Tempo economizado/ano: <strong>{economia_tempo_horas * 12:.0f} horas</strong><br>
        ‚úì Melhoria na precis√£o: <strong>{precisao_pdfator - precisao_manual}%</strong><br>
        ‚úì ROI anual: <strong>{roi_percentual * 12:.0f}%</strong>
    </div>
    """, unsafe_allow_html=True)

elif current_slide == 6:  # RESULTADOS E BENEF√çCIOS
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üéØ Resultados e Benef√≠cios</div>
        <div class="slide-subtitle">Impacto Mensur√°vel da IA nos Processos</div>
    </div>
    """, unsafe_allow_html=True)
    
    # M√©tricas principais
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">R$ 220k</div>
            <div class="metric-label">Economia Anual</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">2.840h</div>
            <div class="metric-label">Tempo Economizado/Ano</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">95%</div>
            <div class="metric-label">Precis√£o da IA</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">7 dias</div>
            <div class="metric-label">Payback</div>
        </div>
        """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üìà Benef√≠cios Quantitativos</h3>
            <div class="bullet-point">‚Ä¢ <strong>98.1%</strong> redu√ß√£o no tempo de processamento</div>
            <div class="bullet-point">‚Ä¢ <strong>10%</strong> melhoria na precis√£o dos dados</div>
            <div class="bullet-point">‚Ä¢ <strong>4.900%</strong> ROI anual</div>
            <div class="bullet-point">‚Ä¢ <strong>80 PDFs</strong> processados simultaneamente</div>
            <div class="bullet-point">‚Ä¢ <strong>Zero</strong> erros de digita√ß√£o</div>
        </div>
        
        <div class="content-card">
            <h3 style="color: #1e3a8a;">‚ö° Benef√≠cios Qualitativos</h3>
            <div class="bullet-point">‚Ä¢ Padroniza√ß√£o de processos</div>
            <div class="bullet-point">‚Ä¢ Rastreabilidade completa</div>
            <div class="bullet-point">‚Ä¢ Disponibilidade 24/7</div>
            <div class="bullet-point">‚Ä¢ Escalabilidade autom√°tica</div>
            <div class="bullet-point">‚Ä¢ Libera√ß√£o para atividades estrat√©gicas</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        # Gr√°fico comparativo antes/depois
        comparacao_data = pd.DataFrame({
            'M√©trica': ['Tempo/Fatura', 'Precis√£o', 'Custo/Fatura', 'Capacidade/Dia'],
            'Antes (Manual)': [30, 85, 40, 16],
            'Depois (IA)': [1.5, 95, 0.9, 1280],
            'Unidade': ['min', '%', 'R, 'faturas']
        })
        
        fig = go.Figure()
        
        x = comparacao_data['M√©trica']
        fig.add_trace(go.Bar(name='Processo Manual', x=x, y=comparacao_data['Antes (Manual)'],
                           marker_color='#ef4444', opacity=0.8))
        fig.add_trace(go.Bar(name='Com IA (PDFator)', x=x, y=comparacao_data['Depois (IA)'],
                           marker_color='#1e3a8a', opacity=0.8))
        
        fig.update_layout(
            title="Comparativo: Antes vs Depois da IA",
            barmode='group',
            plot_bgcolor='white',
            paper_bgcolor='white',
            height=400,
            font=dict(color='#1e3a8a')
        )
        
        st.plotly_chart(fig, use_container_width=True)
        
        # Evolu√ß√£o temporal
        st.markdown("""
        <div class="highlight-box">
            <h4>üöÄ Roadmap de Expans√£o</h4>
            <strong>Fase 1:</strong> PDFator (Conclu√≠do)<br>
            <strong>Fase 2:</strong> Integra√ß√£o Power BI<br>
            <strong>Fase 3:</strong> API para ERP<br>
            <strong>Fase 4:</strong> IA Preditiva
        </div>
        """, unsafe_allow_html=True)

elif current_slide == 7:  # CONCLUS√ïES
    st.markdown("""
    <div class="slide-header">
        <div class="slide-title">üéä Conclus√µes</div>
        <div class="slide-subtitle">IA como Acelerador de Transforma√ß√£o Digital</div>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("""
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üéØ Principais Aprendizados</h3>
            <div class="bullet-point">‚Ä¢ <strong>IA Pr√°tica:</strong> Solu√ß√µes reais para problemas espec√≠ficos</div>
            <div class="bullet-point">‚Ä¢ <strong>ROI Mensur√°vel:</strong> Resultados tang√≠veis em semanas</div>
            <div class="bullet-point">‚Ä¢ <strong>Escalabilidade:</strong> De piloto a solu√ß√£o corporativa</div>
            <div class="bullet-point">‚Ä¢ <strong>Ado√ß√£o Gradual:</strong> Mudan√ßa cultural sustent√°vel</div>
            <div class="bullet-point">‚Ä¢ <strong>Tecnologia Acess√≠vel:</strong> Ferramentas dispon√≠veis hoje</div>
        </div>
        
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üî¨ Fatores Cr√≠ticos de Sucesso</h3>
            <div class="bullet-point">‚Ä¢ Escolha do caso de uso certo (matriz esfor√ßo x impacto)</div>
            <div class="bullet-point">‚Ä¢ Prototipa√ß√£o r√°pida e iterativa</div>
            <div class="bullet-point">‚Ä¢ Valida√ß√£o constante com usu√°rios finais</div>
            <div class="bullet-point">‚Ä¢ Gest√£o de mudan√ßas estruturada</div>
            <div class="bullet-point">‚Ä¢ Monitoramento cont√≠nuo de performance</div>
        </div>
        
        <div class="content-card">
            <h3 style="color: #1e3a8a;">üöÄ Pr√≥ximos Passos</h3>
            <div class="bullet-point">‚Ä¢ Expans√£o para outros tipos de documentos</div>
            <div class="bullet-point">‚Ä¢ Integra√ß√£o com sistemas corporativos</div>
            <div class="bullet-point">‚Ä¢ IA preditiva para demanda energ√©tica</div>
            <div class="bullet-point">‚Ä¢ Automa√ß√£o de relat√≥rios ESG</div>
            <div class="bullet-point">‚Ä¢ Cria√ß√£o de centro de excel√™ncia em IA</div>
        </div>
    </div>
    
    with col2:
        st.markdown("""
        <div class="highlight-box">
            <h4>üí° Li√ß√µes Aprendidas</h4>
            <br>
            <strong>"A IA n√£o substitui humanos, potencializa capacidades"</strong>
            <br><br>
            ‚úì Start small, think big<br>
            ‚úì Dados s√£o o novo petr√≥leo<br>
            ‚úì Itera√ß√£o r√°pida > Perfei√ß√£o<br>
            ‚úì ROI deve ser mensur√°vel<br>
            ‚úì Ado√ß√£o √© sobre pessoas
        </div>
        """, unsafe_allow_html=True)
        
        # Gr√°fico de impacto
        impacto_areas = pd.DataFrame({
            '√Årea': ['Efici√™ncia', 'Qualidade', 'Custos', 'Inova√ß√£o', 'Pessoas'],
            'Impacto': [95, 90, 85, 80, 75]
        })
        
        fig = px.bar(impacto_areas, x='Impacto', y='√Årea', orientation='h',
                    color='Impacto', color_continuous_scale=['#f0f9ff', '#1e3a8a'])
        fig.update_layout(
            title="Impacto da IA por √Årea",
            plot_bgcolor='white',
            paper_bgcolor='white',
            height=300,
            showlegend=False
        )
        st.plotly_chart(fig, use_container_width=True)
        
        st.markdown("""
        <div class="content-card">
            <h4 style="color: #1e3a8a; text-align: center;">üèÜ Resultado Final</h4>
            <div style="text-align: center; font-size: 1.2rem; color: #1e3a8a;">
                <strong>De 30 minutos para 1.5 minutos</strong><br>
                <strong>De 85% para 95% de precis√£o</strong><br>
                <strong>ROI de 4.900% ao ano</strong>
            </div>
        </div>
        """, unsafe_allow_html=True)
    
    # Call to action
    st.markdown("""
    <div style="background: linear-gradient(90deg, #1e3a8a 0%, #3b82f6 100%); 
                color: white; padding: 2rem; border-radius: 15px; 
                text-align: center; margin: 2rem 0;">
        <h2>ü§ñ A IA est√° transformando a ind√∫stria</h2>
        <h3>O futuro √© agora. A quest√£o n√£o √© "se", mas "quando" sua organiza√ß√£o vai adotar.</h3>
        <br>
        <div style="font-size: 1.2rem;">
            <strong>PDFator: Prova de que IA pode gerar valor real, mensur√°vel e imediato</strong>
        </div>
    </div>
    """, unsafe_allow_html=True)

# Navega√ß√£o
st.markdown("<br><br>", unsafe_allow_html=True)
col1, col2, col3 = st.columns([1, 1, 1])

with col1:
    if st.button("‚¨ÖÔ∏è Anterior", disabled=(current_slide == 0)):
        st.session_state.current_slide = max(0, current_slide - 1)
        st.rerun()

with col2:
    st.markdown(f"""
    <div style="text-align: center; padding: 10px; background: #f8fafc; 
                border-radius: 10px; border: 2px solid #1e3a8a;">
        <strong>Slide {current_slide + 1} de {len(slides)}</strong><br>
        <em>{slides[current_slide]}</em>
    </div>
    """, unsafe_allow_html=True)

with col3:
    if st.button("Pr√≥ximo ‚û°Ô∏è", disabled=(current_slide == len(slides) - 1)):
        st.session_state.current_slide = min(len(slides) - 1, current_slide + 1)
        st.rerun()

# Footer
st.markdown("""
<div style="text-align: center; margin-top: 3rem; padding: 1rem; 
            color: #64748b; border-top: 1px solid #e2e8f0;">
    <strong>Apresenta√ß√£o: IA para Otimiza√ß√£o de Processos - CSN Energia</strong><br>
    Desenvolvido com Streamlit ‚Ä¢ Dados baseados em caso real ‚Ä¢ 2025
</div>
""", unsafe_allow_html=True)